name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Build library (native target)
      run: cargo build --verbose
      
    - name: Run tests with std feature
      run: cargo test --lib --features std --verbose
      
    - name: Build examples with std feature
      run: |
        cargo build --bin example --features std
        cargo build --bin benchmark --features std
        cargo build --bin interactive_demo --features std
        cargo build --bin stress_test --features std
        cargo build --bin priority_test --features std

  cross-platform:
    name: Cross Platform Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build (no_std)
      run: cargo build --verbose
      
    - name: Build with std feature  
      run: cargo build --features std --verbose
      
    - name: Test with std feature
      run: cargo test --lib --features std --verbose

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: cargo audit

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build documentation
      run: cargo doc --no-deps --document-private-items --features std
      
    - name: Check for documentation warnings
      run: cargo doc --no-deps 2>&1 | grep -q "warning" && exit 1 || exit 0